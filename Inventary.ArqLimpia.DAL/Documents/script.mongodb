db.createCollection("Products", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["Name", "Title", "Description", "Images", "Stock", "Price", "CompanyId", "SendConditions", "Tags"],
         properties: {
            ProductName: {
               bsonType: "string",
               description: "Nombre del producto"
            },
            Title: {
               bsonType: "string",
               description: "Título del producto"
            },
            Description: {
               bsonType: "string",
               description: "Descripción del producto"
            },
            Images: {
               bsonType: "array",
               description: "Arreglo de URLs de imágenes del producto",
               items: {
                  bsonType: "string",
                  description: "URL de imagen"
               }
            },
            Stock: {
               bsonType: "int",
               minimum: 0,
               description: "Cantidad en stock del producto"
            },
            Price: {
               bsonType: "double",
               minimum: 0,
               description: "Precio del producto"
            },
            CompanyId: {
               bsonType: "objectId",
               description: "ID de la empresa relacionada con el producto"
            },
            SendConditions: {
               bsonType: "string",
               description: "Condiciones de envío del producto"
            },
            Tags: {
               bsonType: "array",
               description: "Etiquetas asociadas al producto",
               items: {
                  bsonType: "string",
                  description: "Etiqueta"
               }
            }
         }
      }
   }
})


db.createCollection("SchemaCategory", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["NameCategory", "Description", "Schemas"],
         properties: {
            NameCategory: {
               bsonType: "string",
               description: "Nombre de la categoría del esquema"
            },
            Description: {
               bsonType: "string",
               description: "Descripción de la categoría del esquema"
            },
            Schemas: {
               bsonType: "object",
               description: "Campos arbitrarios relacionados con la categoría del esquema"
            }
         }
      }
   }
})


db.createCollection("Orders", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["date", "user", "store", "total"],
         properties: {
            date: {
               bsonType: "date",
               description: "Fecha de la orden"
            },
            user: {
               bsonType: "int",
               description: "ID del usuario que realizó la orden"
            },
            store: {
               bsonType: "int",
               description: "ID de la tienda relacionada con la orden"
            },
            total: {
               bsonType: "decimal",
               minimum: 0,
               description: "Total de la orden"
            }
         }
      }
   }
})

db.createCollection("OrderProduct", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["order", "quantity", "product"],
         properties: {
            order: {
               bsonType: "objectId",
               description: "ID de la orden a la que se refiere el producto"
            },
            quantity: {
               bsonType: "int",
               minimum: 1,
               description: "Cantidad del producto en la orden"
            },
            product: {
               bsonType: "objectId",
               description: "ID del producto relacionado con la orden"
            }
         }
      }
   }
})

db.createCollection("Returns", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["date", "user", "reason", "store", "total"],
         properties: {
            date: {
               bsonType: "date",
               description: "Fecha de la devolución"
            },
            user: {
               bsonType: "objectId",
               description: "ID del usuario que realizó la devolución"
            },
            reason: {
               bsonType: "string",
               description: "Motivo de la devolución"
            },
            store: {
               bsonType: "objectId",
               description: "ID de la tienda relacionada con la devolución"
            },
            total: {
               bsonType: "decimal",
               minimum: 0,
               description: "Total de la devolución"
            }
         }
      }
   }
})


db.createCollection("ProductReturn", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["return", "quantity", "product"],
         properties: {
            return: {
               bsonType: "objectId",
               description: "ID de la devolución a la que se refiere el producto"
            },
            quantity: {
               bsonType: "int",
               minimum: 1,
               description: "Cantidad del producto en la devolución"
            },
            product: {
               bsonType: "objectId",
               description: "ID del producto relacionado con la devolución"
            }
         }
      }
   }
})

db.createCollection("ProductHistory", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["productname", "title", "description", "stock", "price", "extraDescriptions", "shippingConditions", "tags"],
         properties: {
            productname: {
               bsonType: "string",
               description: "Nombre del producto"
            },
            title: {
               bsonType: "string",
               description: "Título del producto"
            },
            description: {
               bsonType: "string",
               description: "Descripción del producto"
            },
            stock: {
               bsonType: "int",
               minimum: 0,
               description: "Cantidad en stock del producto"
            },
            price: {
               bsonType: "decimal",
               minimum: 0,
               description: "Precio del producto"
            },
            SendConditions: {
               bsonType: "string",
               description: "Condiciones de envío del producto"
            },
            tags: {
               bsonType: "array",
               description: "Etiquetas asociadas al producto",
               items: {
                  bsonType: "string",
                  description: "Etiqueta"
               }
            }
         }
      }
   }
})

db.createCollection("ProductRegister", {
   validator: {
      $jsonSchema: {
         bsonType: "object",
         required: ["user", "store", "product_info", "company_name", "type", "changes"],
         properties: {
            user: {
               bsonType: "object",
               properties: {
                  name: {
                     bsonType: "string",
                     description: "nombre de usuario"
                  },
                  role: {
                     bsonType: "string",
                     description: "role el cual ocupo para acceder"
                  }
               }
            },
            date:{
               bsonType: "date",
               description: "Fecha de registro"
            },
            company: {
               bsonType: "objectId",
               description: "ID de la tienda relacionada con el registro"
            },
            product_info: {
               bsonType: "objectId",
               description: "Información del producto registrado"
            },
            company_name: {
               bsonType: "string",
               description: "Nombre de la empresa relacionada con el registro"
            },
            type: {
               enum: ["newStock", "changePrice"],
               description: "Tipo de registro (newStock o changePrice)"
            },
            changes: {
               bsonType: "object",
               description: "Cambios realizados en el producto"
            }
         }
      }
   }
})