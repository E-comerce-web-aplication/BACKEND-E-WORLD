db.createCollection("Products", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["ProductName", "Title", "Description", "Images", "Stock", "Price", "CompanyId", "SendConditions", "Tags"],
         properties: {
            ProductName: {
               bsonType: "string",
               description: "Nombre del producto"
            },
            Title: {
               bsonType: "string",
               description: "Título del producto"
            },
            Description: {
               bsonType: "string",
               description: "Descripción del producto"
            },
            Images: {
               bsonType: "Array",
               description: "Arreglo de URLs de imágenes del producto",
               items: {
                  bsonType: "string",
                  description: "URL de imagen"
               }
            },
            Stock: {
               bsonType: "int",
               minimum: 0,
               description: "Cantidad en stock del producto"
            },
            Price: {
               bsonType: "Double",
               minimum: 0,
               description: "Precio del producto"
            },
            CompanyId: {
               bsonType: "ObjectId",
               description: "ID de la empresa relacionada con el producto"
            },
            SendConditions: {
               bsonType: "string",
               description: "Condiciones de envío del producto"
            },
            Tags: {
               bsonType: "Array",
               description: "Etiquetas asociadas al producto",
               items: {
                  bsonType: "string",
                  description: "Etiqueta"
               }
            }
         }
      }
   }
})


db.createCollection("SchemaCategory", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["NameCategory", "Description", "Schemas"],
         properties: {
            NameCategory: {
               bsonType: "string",
               description: "Nombre de la categoría del esquema"
            },
            Description: {
               bsonType: "string",
               description: "Descripción de la categoría del esquema"
            },
            Schemas: {
               bsonType: "Object",
               description: "Campos arbitrarios relacionados con la categoría del esquema"
            }
         }
      }
   }
})


db.createCollection("Orders", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["Date", "User", "Store", "Total"],
         properties: {
            Date: {
               bsonType: "Date",
               description: "Fecha de la orden"
            },
            User: {
               bsonType: "int",
               description: "ID del usuario que realizó la orden"
            },
            Store: {
               bsonType: "int",
               description: "ID de la tienda relacionada con la orden"
            },
            Total: {
               bsonType: "decimal",
               minimum: 0,
               description: "Total de la orden"
            }
         }
      }
   }
})

db.createCollection("OrderProduct", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["OrderId", "Quantity", "ProductId"],
         properties: {
            OrderId: {
               bsonType: "ObjectId",
               description: "ID de la orden a la que se refiere el producto"
            },
            Quantity: {
               bsonType: "int",
               minimum: 1,
               description: "Cantidad del producto en la orden"
            },
            ProductId: {
               bsonType: "ObjectId",
               description: "ID del producto relacionado con la orden"
            }
         }
      }
   }
})

db.createCollection("Returns", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["Date", "User", "Reason", "Store", "Total"],
         properties: {
            Date: {
               bsonType: "Date",
               description: "Fecha de la devolución"
            },
            User: {
               bsonType: "ObjectId",
               description: "ID del usuario que realizó la devolución"
            },
            Reason: {
               bsonType: "string",
               description: "Motivo de la devolución"
            },
            Store: {
               bsonType: "ObjectId",
               description: "ID de la tienda relacionada con la devolución"
            },
            Total: {
               bsonType: "decimal",
               minimum: 0,
               description: "Total de la devolución"
            }
         }
      }
   }
})


db.createCollection("ProductReturn", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["Return", "Quantity", "Product"],
         properties: {
            Return: {
               bsonType: "ObjectId",
               description: "ID de la devolución a la que se refiere el producto"
            },
            Quantity: {
               bsonType: "int",
               minimum: 1,
               description: "Cantidad del producto en la devolución"
            },
            Product: {
               bsonType: "ObjectId",
               description: "ID del producto relacionado con la devolución"
            }
         }
      }
   }
})

db.createCollection("ProductHistory", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["ProductName", "Title", "Description", "Stock", "Price", "ExtraDescriptions", "ShippingConditions", "Tags"],
         properties: {
            ProductName: {
               bsonType: "string",
               description: "Nombre del producto"
            },
            Title: {
               bsonType: "string",
               description: "Título del producto"
            },
            Description: {
               bsonType: "string",
               description: "Descripción del producto"
            },
            Stock: {
               bsonType: "int",
               minimum: 0,
               description: "Cantidad en stock del producto"
            },
            Price: {
               bsonType: "decimal",
               minimum: 0,
               description: "Precio del producto"
            },
            SendConditions: {
               bsonType: "string",
               description: "Condiciones de envío del producto"
            },
            Tags: {
               bsonType: "array",
               description: "Etiquetas asociadas al producto",
               items: {
                  bsonType: "string",
                  description: "Etiqueta"
               }
            }
         }
      }
   }
})

db.createCollection("ProductRegister", {
   validator: {
      $jsonSchema: {
         bsonType: "Object",
         required: ["User", "Store", "Product_info", "Company_name", "Type", "Changes"],
         properties: {
            User: {
               bsonType: "Object",
               properties: {
                  name: {
                     bsonType: "string",
                     description: "nombre de usuario"
                  },
                  role: {
                     bsonType: "string",
                     description: "role el cual ocupo para acceder"
                  }
               }
            },
            Date:{
               bsonType: "Date",
               description: "Fecha de registro"
            },
            CompanyId: {
               bsonType: "ObjectId",
               description: "ID de la tienda relacionada con el registro"
            },
            Product_info: {
               bsonType: "ObjectId",
               description: "Información del producto registrado"
            },
            Company_name: {
               bsonType: "string",
               description: "Nombre de la empresa relacionada con el registro"
            },
            Type: {
               enum: ["newStock", "changePrice"],
               description: "Tipo de registro (newStock o changePrice)"
            },
            Changes: {
               bsonType: "object",
               description: "Cambios realizados en el producto"
            }
         }
      }
   }
})